generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

enum PresencaStatus {
  PRESENTE
  AUSENTE
  JUSTIFICADO
}

model User {
  id            String   @id @default(cuid())
  name          String
  email         String   @unique
  cpf           String   @unique
  password_hash String
  role          Role     @default(STUDENT)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  presencas     Presenca[]
}

model Turma {
  id         String   @id @default(cuid())
  nome       String
  ano        Int
  turno      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  aulas      Aula[]
}

model Aula {
  id         String   @id @default(cuid())
  titulo     String
  data       DateTime
  turma      Turma    @relation(fields: [turma_id], references: [id], onDelete: Cascade)
  turma_id   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  presencas  Presenca[]
}

model Presenca {
  id         String          @id @default(cuid())
  aula       Aula            @relation(fields: [aula_id], references: [id], onDelete: Cascade)
  aula_id    String
  user       User            @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
  status     PresencaStatus
  obs        String?
  created_at DateTime        @default(now())
  updated_at DateTime        @updatedAt

  @@unique([aula_id, user_id])
}
